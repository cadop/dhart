name: New Documentation

on:
  push:
    branches:    
      - main
  pull_request:
    branches:    
      - main

jobs:
  doxygen:

    runs-on: windows-2022
    strategy:
      max-parallel: 0
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2
      with: # for github push action
        #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - name: Install windows documentation requirements
      run: |
        $url = "https://www.doxygen.nl/files/doxygen-1.9.5.windows.x64.bin.zip"
        Invoke-WebRequest -Uri $url -OutFile "C:\doxygen.zip"
        
        Expand-Archive "C:\doxygen.zip" "C:\windows\system32"
        doxygen --version`

        choco install graphviz -y

        #sudo apt-get install -y doxygen
        #sudo apt-get install -y graphviz
    
    - name: Build c++ documentation with doxygen
      run: |
        cd src
        doxygen Doxyfile
        ls 
        
    - name: Build c# documentation with doxygen
      run: |
        doxygen Doxyfile_Csharp
        doxygen Doxyfile_Public_CSharp

    - name: Auto-deploy doc changes
      run : |
        
        git config --local user.email "action@github.com"
        git config --local user.name "github-actions[bot]"

        mkdir html_build

        git worktree add -B docs html_build origin/docs
        # cp -a docs/. html_build/ 
        robocopy .\docs\ .\html_build\ /e

        cd html_build

        git add . 
        git commit -m "ghpages"
        git push -f
            
  sphinx:
    runs-on: ubuntu-latest
    needs: doxygen
    strategy:
      max-parallel: 0
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2
      with: # for github push action
        #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Install from pypi
      run: | 
        pip install matplotlib 
        pip install numpy 
        pip install scipy

    - name: Install documentation dependencies
      run: |
        pip install sphinx numpydoc matplotlib         

    - name: Setup cmake
      run: |
        ls 
        mkdir build
        cd build
        cmake ../src \
        -DDHARTAPI_Config=All \
        -DDHARTAPI_EnablePython=ON \
        -DDHARTAPI_EnableTests=ON \
        -DCMAKE_INSTALL_PREFIX="linux-build"
        

    - name: cmake build
      run: |
        ls
        cmake --build build

    - name: cmake install
      run: |
        ls
        cd build
        make && make install
        
    - name : Install package
      run: |
        pip install build/linux-build

    # - name: check Existing dhart 
    #   run: |
    #     python -c "from dhart.spatialstructures import Graph"

    # - name: Install package
    #   run: |
    #     ls
    #     cd build/Python
    #     ls
    #     pip install . 

    # - name: test if package dll is installed
    #   run: | 
    #     ls 
    #     cd build/Python
    #     ls 
    #     cd bin 
    #     ls
    #     python -c "import dhart"
    #     ls
    #     python -c "from dhart.spatialstructures import Graph"
    
    # - name: Install Sphinx Latex
    #   run: |
        # sudo apt-get update -y && sudo apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended

    - name : Build documentation
      run: |
        cd docs/Python\ Docs/
        make clean
        make html

    - name: Auto-deploy python doc changes
      run : |
        
        git config --local user.email "action@github.com"
        git config --local user.name "github-actions[bot]"

        mkdir html_build

        git worktree add -B docs html_build origin/docs
        cp -r ./docs/ ./html_build/

        cd html_build

        git add . 
        git commit -m "ghpages"
        git push -f
            
            
