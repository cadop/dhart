name: Linux Tests

on:
  pull_request:
    branches:    
      - main
  push:
    branches:    
      - main

jobs:
  linux:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 0
      matrix:
        python-version: [3.10]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2
      with: # for github push action
        #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name : Install Linux documentation requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
    
    - name : Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools
        pip install flake8 pytest
        pip install matplotlib 
        pip install numpy 
        pip install scipy
        pip install pywavefront
        pip install tk
        pip install pytest

    - name: Install documentation dependencies
      run: |
        pip install sphinx numpydoc       

    - name: Setup cmake
      run: |
        ls 
        mkdir build
        cd build
        cmake -DDHARTAPI_Config=All -DDHARTAPI_EnablePython=ON -DDHARTAPI_EnableTests=ON -DCMAKE_INSTALL_PREFIX="linux-build" ../src

    - name: cmake build
      run: |
        ls
        cmake --build .

    - name: cmake install
      run: |
        ls
        make && make install
        
    - name : Install package
      run: |
        pip install linux-build


    - name : Run HFUnitTests
      run: |
        cmake --build . --target test
    
    - name : Run Pytest
      run: |
        cd linux-build
        pytest

    - name : Run doctest
      run: |
        cd ../../docs/Python\ Docs/
        python -m sphinx source build --builder doctest
    # - name: check Existing dhart 
    #   run: |
    #     python -c "from dhart.spatialstructures import Graph"

    # - name: Install package
    #   run: |
    #     ls
    #     cd build/Python
    #     ls
    #     pip install . 

    # - name: test if package dll is installed
    #   run: | 
    #     ls 
    #     cd build/Python
    #     ls 
    #     cd bin 
    #     ls
    #     python -c "import dhart"
    #     ls
    #     python -c "from dhart.spatialstructures import Graph"
    
    # - name: Install Sphinx Latex
    #   run: |
        # sudo apt-get update -y && sudo apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended

    - name: Build documentation with sphinx
      run: |
        cd "docs/Python Docs"
        ls
        ./make.bat clean
        ./make.bat html
        # make latexpdf
        cd build
        ls
        cd html
        ls

    - name: Auto-deploy python doc changes
      run : |
        
        git config --local user.email "action@github.com"
        git config --local user.name "github-actions[bot]"

        mkdir html_build

        git worktree add -B docs html_build origin/docs
        robocopy .\docs\ .\html_build\ /e

        cd html_build

        git add . 
        git commit -m "ghpages"
        git push -f
            
            
