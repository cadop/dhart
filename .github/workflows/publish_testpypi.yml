name: Publish to Test PyPI

on:
    pull_request:
        branches:    
            - dev_stage
            - main

jobs:

    testpypi:
        runs-on: windows-latest
        strategy:
          max-parallel: 0
          matrix:
            python-version: ['3.10']
    
        steps:
        - uses: actions/checkout@v2
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - uses: actions/checkout@v2
          with: # for github push action
            #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
            fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

        - name: Configure cmake
          run: |
            cmake -S src -B build -G "Visual Studio 17 2022" -A x64 `
            -DDHARTAPI_Config=All `
            -DDHARTAPI_EnableTests=False `
            -DCMAKE_CONFIGURATION_TYPES=Release `
            -DDHARTAPI_EnablePython=True `
            -DDHARTAPI_EnableCSharp=False `
            -DINSTALL_GTEST=False `
            -DCMAKE_INSTALL_PREFIX="D:/a/dhart/dhart/build/Python"
        
        - name: Build
          run: cmake --build build --config Release
        
        - name: Install
          run: cmake --install build --config Release

        - name: Add build directory to PATH
          run: |
            $env:PATH += ";D:/a/dhart/dhart/build/Python/bin"

        - name: Check Install Location
          run: |
            cd "D:/a/dhart/dhart/build/Python"
            ls
            cd bin
            ls
            cd ..
            cd dhart
            ls
            cd bin
            ls

        - name: Build and Install Wheel
          run: |
            cd "D:/a/dhart/dhart/build/Python"
            python -m pip install --upgrade pip
            python -m pip install setuptools wheel twine
            python -m pip install numpy matplotlib scipy
                
        # Step 4: Build the package
        - name: Build the package
          run: |
            cd "D:/a/dhart/dhart/build/Python"
            python -m build
            # python setup.py sdist bdist_wheel

        # Step 5: Publish to Test PyPI
        - name: Publish to Test PyPI
          env:
            TWINE_USERNAME: "__token__" # Required for Test PyPI token
            TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          run: |
            twine upload --repository-url https://test.pypi.org/legacy/ dist/*