name: Linux Tests

on:
  pull_request:
    branches:    
      - main
  push:
    branches:    
      - main

jobs:
  linux:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 0
      matrix:
        python-version: ['3.10']

    steps:

    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v2
      with: # for github push action
        #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name : Install Linux documentation requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
    
    - name : Pull from Git LFS
      run: |
        git lfs pull
    
    - name : Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install matplotlib 
        pip install numpy 
        pip install scipy
        pip install pywavefront
        pip install tk
        pip install pytest

    - name: Install documentation dependencies
      run: |
        pip install sphinx numpydoc       

    - name: Setup cmake
      run: |
        ls 
        mkdir build
        cd build
        cmake ../src \
        -DDHARTAPI_Config=All \
        -DDHARTAPI_EnablePython=ON \
        -DDHARTAPI_EnableTests=ON \
        -DCMAKE_INSTALL_PREFIX="linux-build"
        

    - name: cmake build
      run: |
        ls
        cmake --build build

    - name: cmake install
      run: |
        ls
        cd build
        make && make install
        
    - name : Install package
      run: |
        pip install build/linux-build

    - name : Run HFUnitTests
      run: |
        cmake --build build --target test
    
    - name : Run Pytest
      run: |
        cd build/linux-build
        pytest
                                                        
    - name : Build documentation
      run: |
        cd docs/Python\ Docs/
        make clean
        make html

    - name : Run doctest
      run: |
        cd docs/Python\ Docs/
        make clean
        make doctest
      continue-on-error: true
            
